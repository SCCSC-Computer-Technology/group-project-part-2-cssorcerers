@model IQSport.Models.SportsModels.F1.ViewModels.F1CurrentConstructorsViewModel
@{
    ViewData["Title"] = "F1 Current Constructors";
}

<html>
<head>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Sports css/f1.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/Common css/common.css" asp-append-version="true">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h2>F1 Current Constructors</h2>

        <!-- Controls -->
        <div class="controls">
            <div class="page-control">
                <p>Page</p>
                <div>
                    <input type="text" min="1" max="@Model.MaxPage" id="pageInput" value="@Model.CurrentPage" />
                    <span>/ @Model.MaxPage</span>
                </div>
            </div>
        </div>

        <!-- Table -->
        <div class="table-container">
            <table class="players-table">
                <thead>
                    <tr>
                        <th>Team</th>
                        <th>Principal</th>
                        <th>Driver 1</th>
                        <th>D1 Number</th>
                        <th>Driver 2</th>
                        <th>D2 Number</th>
                        <th>Championships</th>
                        <th>Base</th>
                        <th>Power Unit</th>
                    </tr>
                </thead>
                @if (Model.F1CurrentConstructor != null && Model.F1CurrentConstructor.Any())
                {
                    <tbody>
                        @foreach (var constructor in Model.F1CurrentConstructor)
                        {
                            <tr>
                                <td data-label="Team">
                                    <a href="@Url.Action("CurrentConstructors", "F1", new { constructorID = constructor.ConstructorID })">
                                        @(constructor.TeamName ?? "Unknown")
                                    </a>
                                </td>
                                <td data-label="Principal">@(constructor.Principal ?? "N/A")</td>
                                <td data-label="Driver 1">@(constructor.Driver1 ?? "N/A")</td>
                                <td data-label="D1 Number" class="stat">@(constructor.D1Num?.ToString() ?? "N/A")</td>
                                <td data-label="Driver 2">@(constructor.Driver2 ?? "N/A")</td>
                                <td data-label="D2 Number" class="stat">@(constructor.D2Num?.ToString() ?? "N/A")</td>
                                <td data-label="Championships" class="stat">@(constructor.Championships?.ToString() ?? "0")</td>
                                <td data-label="Base">@(constructor.Base ?? "N/A")</td>
                                <td data-label="Power Unit">@(constructor.PowerUnit ?? "N/A")</td>
                            </tr>
                        }
                    </tbody>
                }
                else
                {
                    <tbody>
                        <tr>
                            <td colspan="9">No current constructors available.</td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <a asp-controller="F1" asp-action="AllCurrentConstructors"
               asp-route-page="1" role="button"><<</a>
            <a asp-controller="F1" asp-action="AllCurrentConstructors"
               asp-route-page="@(Model.CurrentPage > 1 ? Model.CurrentPage - 1 : 1)" role="button"><</a>
            <a asp-controller="F1" asp-action="AllCurrentConstructors"
               asp-route-page="@(Model.CurrentPage < Model.MaxPage ? Model.CurrentPage + 1 : Model.MaxPage)" role="button">></a>
            <a asp-controller="F1" asp-action="AllCurrentConstructors"
               asp-route-page="@Model.MaxPage" role="button">>></a>
        </div>
    </div>

    <script>
        let pageInput = document.getElementById('pageInput');
        pageInput.addEventListener('keydown', function (event) {
            if (event.key === 'Enter') {
                let page = Number(pageInput.value);
                if (!isNaN(page)) {
                    window.location.href = `/f1/AllCurrentConstructors?page=${page}`;
                } else {
                    alert("Page number must be numeric");
                    pageInput.value = @Model.CurrentPage;
                }
            }
        });
    </script>
</body>
</html>